# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild]
steps:
# This step runs the unit tests on the app
- name: 'python:3.7-slim'
  id: Test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/hello-cloudbuild:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/hello-cloudbuild:$SHORT_SHA'
# [END cloudbuild]

# [START cloudbuild-trigger-cd]
# This step clones the hello-cloudbuild-env repository
# - name: 'gcr.io/cloud-builders/gcloud'
#   id: Clone env repository
#   entrypoint: /bin/sh
#   args:
#   - '-c'
#   - |
#     gcloud source repos clone hello-cloudbuild-env && \
#     cd hello-cloudbuild-env && \
#     git checkout candidate && \
#     git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')



- name: gcr.io/cloud-builders/git
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git  clone https://github.com/venkatakkineni/hello-cloudbuild-env.git && \
    cd hello-cloudbuild-env && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')


- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
  - -c
  - |
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    cd hello-cloudbuild-env
    cp known_hosts.github /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  

# This step generates the new manifest
# - name: 'gcr.io/cloud-builders/gcloud'
#   id: Generate manifest
#   entrypoint: /bin/sh
#   args:
#   - '-c'
#   - |
#      sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
#      sed "s/COMMIT_SHA/${SHORT_SHA}/g" > hello-cloudbuild-env/kubernetes.yaml

- name: gcr.io/cloud-builders/git
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
    sed "s/COMMIT_SHA/${SHORT_SHA}/g" > hello-cloudbuild-env/kubernetes.yaml

# This step pushes the manifest back to hello-cloudbuild-env
# - name: 'gcr.io/cloud-builders/gcloud'
#   id: Push manifest
#   entrypoint: /bin/sh
#   args:
#   - '-c'
#   - |
#     set -x && \
#     cd hello-cloudbuild-env && \
#     git add kubernetes.yaml && \
#     git commit -m "Deploying image gcr.io/${PROJECT_ID}/hello-cloudbuild:${SHORT_SHA}
#     Built from commit ${COMMIT_SHA} of repository hello-cloudbuild-app
#     Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
#     git push origin candidate






- name: 'gcr.io/cloud-builders/git'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd hello-cloudbuild-env && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/hello-cloudbuild:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository hello-cloudbuild-app
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git remote set-url origin git@github.com:venkatakkineni/hello-cloudbuild-env.git
    git push origin candidate
  volumes:
  - name: 'ssh'
    path: /root/.ssh

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/github-secret/versions/latest
    env: 'SSH_KEY'

# [END cloudbuild-trigger-cd]

